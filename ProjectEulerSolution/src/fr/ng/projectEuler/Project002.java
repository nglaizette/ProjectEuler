package fr.ng.projectEuler;

public class Project002 {

	// Each new term in the Fibonacci sequence is generated by adding the
	// previous two terms. By starting with 1 and 2, the first 10 terms will be:
	//
	// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	//
	// By considering the terms in the Fibonacci sequence whose values do not
	// exceed four million, find the sum of the even-valued terms.
	/**
	 * @param args
	 */
	public static void main(String[] args) {
		int somme = 0;
		int fibPrev = 0;
		int fibNext = 1;

		int i = 0;
		while (fibNext < 4000000) {
			System.out.println("F_" + i + ": " + fibNext);
			if (fibNext % 2 == 0) {
				somme += fibNext;
			}
			int temp = fibNext;
			fibNext += fibPrev;
			fibPrev = temp;
			i++;
		}
		System.out.println("Somme :" + somme);
	}
  public static void main(String[] args) {
        long sum = 0;

        long f_n = 1;
        long f_npp = 2;

        while (f_npp < 4_000_000) {
            // System.out.println("f_(n+1):" + f_npp);
            if (f_npp % 2 == 0) {
                System.out.println("-> f_(n+1):" + f_npp);
                sum += f_npp;
            }
            else {
                System.out.println("f_(n+1):" + f_npp);
            }
            long temp = f_npp;
            f_npp = f_n + f_npp;
            if (f_npp < 0) {
                System.out.println("Break");
            }
            f_n = temp;
        }

        System.out.println("Sum : " + sum);
    }
}
